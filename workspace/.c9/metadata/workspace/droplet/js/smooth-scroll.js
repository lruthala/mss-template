{"filter":false,"title":"smooth-scroll.js","tooltip":"/droplet/js/smooth-scroll.js","undoManager":{"mark":0,"position":0,"stack":[[{"start":{"row":0,"column":0},"end":{"row":428,"column":3},"action":"insert","lines":["/**"," * smooth-scroll v5.3.3"," * Animate scrolling to anchor links, by Chris Ferdinandi."," * http://github.com/cferdinandi/smooth-scroll"," * "," * Free to use under the MIT License."," * http://gomakethings.com/mit/"," */","","(function (root, factory) {","\tif ( typeof define === 'function' && define.amd ) {","\t\tdefine('smoothScroll', factory(root));","\t} else if ( typeof exports === 'object' ) {","\t\tmodule.exports = factory(root);","\t} else {","\t\troot.smoothScroll = factory(root);","\t}","})(window || this, function (root) {","","\t'use strict';","","\t//","\t// Variables","\t//","","\tvar smoothScroll = {}; // Object for public APIs","\tvar supports = !!document.querySelector && !!root.addEventListener; // Feature test","\tvar settings, eventTimeout, fixedHeader;","","\t// Default settings","\tvar defaults = {","\t\tspeed: 500,","\t\teasing: 'easeInOutCubic',","\t\toffset: 0,","\t\tupdateURL: true,","\t\tcallbackBefore: function () {},","\t\tcallbackAfter: function () {}","\t};","","","\t//","\t// Methods","\t//","","\t/**","\t * A simple forEach() implementation for Arrays, Objects and NodeLists","\t * @private","\t * @param {Array|Object|NodeList} collection Collection of items to iterate","\t * @param {Function} callback Callback function for each iteration","\t * @param {Array|Object|NodeList} scope Object/NodeList/Array that forEach is iterating over (aka `this`)","\t */","\tvar forEach = function (collection, callback, scope) {","\t\tif (Object.prototype.toString.call(collection) === '[object Object]') {","\t\t\tfor (var prop in collection) {","\t\t\t\tif (Object.prototype.hasOwnProperty.call(collection, prop)) {","\t\t\t\t\tcallback.call(scope, collection[prop], prop, collection);","\t\t\t\t}","\t\t\t}","\t\t} else {","\t\t\tfor (var i = 0, len = collection.length; i < len; i++) {","\t\t\t\tcallback.call(scope, collection[i], i, collection);","\t\t\t}","\t\t}","\t};","","\t/**","\t * Merge defaults with user options","\t * @private","\t * @param {Object} defaults Default settings","\t * @param {Object} options User options","\t * @returns {Object} Merged values of defaults and options","\t */","\tvar extend = function ( defaults, options ) {","\t\tvar extended = {};","\t\tforEach(defaults, function (value, prop) {","\t\t\textended[prop] = defaults[prop];","\t\t});","\t\tforEach(options, function (value, prop) {","\t\t\textended[prop] = options[prop];","\t\t});","\t\treturn extended;","\t};","","\t/**","\t * Get the closest matching element up the DOM tree","\t * @param {Element} elem Starting element","\t * @param {String} selector Selector to match against (class, ID, or data attribute)","\t * @return {Boolean|Element} Returns false if not match found","\t */","\tvar getClosest = function (elem, selector) {","\t\tvar firstChar = selector.charAt(0);","\t\tfor ( ; elem && elem !== document; elem = elem.parentNode ) {","\t\t\tif ( firstChar === '.' ) {","\t\t\t\tif ( elem.classList.contains( selector.substr(1) ) ) {","\t\t\t\t\treturn elem;","\t\t\t\t}","\t\t\t} else if ( firstChar === '#' ) {","\t\t\t\tif ( elem.id === selector.substr(1) ) {","\t\t\t\t\treturn elem;","\t\t\t\t}","\t\t\t} else if ( firstChar === '[' ) {","\t\t\t\tif ( elem.hasAttribute( selector.substr(1, selector.length - 2) ) ) {","\t\t\t\t\treturn elem;","\t\t\t\t}","\t\t\t}","\t\t}","\t\treturn false;","\t};","","\t/**","\t * Get the height of an element","\t * @private","\t * @param  {Node]} elem The element","\t * @return {Number}     The element's height","\t */","\tvar getHeight = function (elem) {","\t\treturn Math.max( elem.scrollHeight, elem.offsetHeight, elem.clientHeight );","\t};","","\t/**","\t * Escape special characters for use with querySelector","\t * @private","\t * @param {String} id The anchor ID to escape","\t * @author Mathias Bynens","\t * @link https://github.com/mathiasbynens/CSS.escape","\t */","\tvar escapeCharacters = function ( id ) {","\t\tvar string = String(id);","\t\tvar length = string.length;","\t\tvar index = -1;","\t\tvar codeUnit;","\t\tvar result = '';","\t\tvar firstCodeUnit = string.charCodeAt(0);","\t\twhile (++index < length) {","\t\t\tcodeUnit = string.charCodeAt(index);","\t\t\t// Note: thereâ€™s no need to special-case astral symbols, surrogate","\t\t\t// pairs, or lone surrogates.","","\t\t\t// If the character is NULL (U+0000), then throw an","\t\t\t// `InvalidCharacterError` exception and terminate these steps.","\t\t\tif (codeUnit === 0x0000) {","\t\t\t\tthrow new InvalidCharacterError(","\t\t\t\t\t'Invalid character: the input contains U+0000.'","\t\t\t\t);","\t\t\t}","","\t\t\tif (","\t\t\t\t// If the character is in the range [\\1-\\1F] (U+0001 to U+001F) or is","\t\t\t\t// U+007F, [â€¦]","\t\t\t\t(codeUnit >= 0x0001 && codeUnit <= 0x001F) || codeUnit == 0x007F ||","\t\t\t\t// If the character is the first character and is in the range [0-9]","\t\t\t\t// (U+0030 to U+0039), [â€¦]","\t\t\t\t(index === 0 && codeUnit >= 0x0030 && codeUnit <= 0x0039) ||","\t\t\t\t// If the character is the second character and is in the range [0-9]","\t\t\t\t// (U+0030 to U+0039) and the first character is a `-` (U+002D), [â€¦]","\t\t\t\t(","\t\t\t\t\tindex === 1 &&","\t\t\t\t\tcodeUnit >= 0x0030 && codeUnit <= 0x0039 &&","\t\t\t\t\tfirstCodeUnit === 0x002D","\t\t\t\t)","\t\t\t) {","\t\t\t\t// http://dev.w3.org/csswg/cssom/#escape-a-character-as-code-point","\t\t\t\tresult += '\\\\' + codeUnit.toString(16) + ' ';","\t\t\t\tcontinue;","\t\t\t}","","\t\t\t// If the character is not handled by one of the above rules and is","\t\t\t// greater than or equal to U+0080, is `-` (U+002D) or `_` (U+005F), or","\t\t\t// is in one of the ranges [0-9] (U+0030 to U+0039), [A-Z] (U+0041 to","\t\t\t// U+005A), or [a-z] (U+0061 to U+007A), [â€¦]","\t\t\tif (","\t\t\t\tcodeUnit >= 0x0080 ||","\t\t\t\tcodeUnit === 0x002D ||","\t\t\t\tcodeUnit === 0x005F ||","\t\t\t\tcodeUnit >= 0x0030 && codeUnit <= 0x0039 ||","\t\t\t\tcodeUnit >= 0x0041 && codeUnit <= 0x005A ||","\t\t\t\tcodeUnit >= 0x0061 && codeUnit <= 0x007A","\t\t\t) {","\t\t\t\t// the character itself","\t\t\t\tresult += string.charAt(index);","\t\t\t\tcontinue;","\t\t\t}","","\t\t\t// Otherwise, the escaped character.","\t\t\t// http://dev.w3.org/csswg/cssom/#escape-a-character","\t\t\tresult += '\\\\' + string.charAt(index);","","\t\t}","\t\treturn result;","\t};","","\t/**","\t * Calculate the easing pattern","\t * @private","\t * @link https://gist.github.com/gre/1650294","\t * @param {String} type Easing pattern","\t * @param {Number} time Time animation should take to complete","\t * @returns {Number}","\t */","\tvar easingPattern = function ( type, time ) {","\t\tvar pattern;","\t\tif ( type === 'easeInQuad' ) pattern = time * time; // accelerating from zero velocity","\t\tif ( type === 'easeOutQuad' ) pattern = time * (2 - time); // decelerating to zero velocity","\t\tif ( type === 'easeInOutQuad' ) pattern = time < 0.5 ? 2 * time * time : -1 + (4 - 2 * time) * time; // acceleration until halfway, then deceleration","\t\tif ( type === 'easeInCubic' ) pattern = time * time * time; // accelerating from zero velocity","\t\tif ( type === 'easeOutCubic' ) pattern = (--time) * time * time + 1; // decelerating to zero velocity","\t\tif ( type === 'easeInOutCubic' ) pattern = time < 0.5 ? 4 * time * time * time : (time - 1) * (2 * time - 2) * (2 * time - 2) + 1; // acceleration until halfway, then deceleration","\t\tif ( type === 'easeInQuart' ) pattern = time * time * time * time; // accelerating from zero velocity","\t\tif ( type === 'easeOutQuart' ) pattern = 1 - (--time) * time * time * time; // decelerating to zero velocity","\t\tif ( type === 'easeInOutQuart' ) pattern = time < 0.5 ? 8 * time * time * time * time : 1 - 8 * (--time) * time * time * time; // acceleration until halfway, then deceleration","\t\tif ( type === 'easeInQuint' ) pattern = time * time * time * time * time; // accelerating from zero velocity","\t\tif ( type === 'easeOutQuint' ) pattern = 1 + (--time) * time * time * time * time; // decelerating to zero velocity","\t\tif ( type === 'easeInOutQuint' ) pattern = time < 0.5 ? 16 * time * time * time * time * time : 1 + 16 * (--time) * time * time * time * time; // acceleration until halfway, then deceleration","\t\treturn pattern || time; // no easing, no acceleration","\t};","","\t/**","\t * Calculate how far to scroll","\t * @private","\t * @param {Element} anchor The anchor element to scroll to","\t * @param {Number} headerHeight Height of a fixed header, if any","\t * @param {Number} offset Number of pixels by which to offset scroll","\t * @returns {Number}","\t */","\tvar getEndLocation = function ( anchor, headerHeight, offset ) {","\t\tvar location = 0;","\t\tif (anchor.offsetParent) {","\t\t\tdo {","\t\t\t\tlocation += anchor.offsetTop;","\t\t\t\tanchor = anchor.offsetParent;","\t\t\t} while (anchor);","\t\t}","\t\tlocation = location - headerHeight - offset;","\t\treturn location >= 0 ? location : 0;","\t};","","\t/**","\t * Determine the document's height","\t * @private","\t * @returns {Number}","\t */","\tvar getDocumentHeight = function () {","\t\treturn Math.max(","\t\t\tdocument.body.scrollHeight, document.documentElement.scrollHeight,","\t\t\tdocument.body.offsetHeight, document.documentElement.offsetHeight,","\t\t\tdocument.body.clientHeight, document.documentElement.clientHeight","\t\t);","\t};","","\t/**","\t * Convert data-options attribute into an object of key/value pairs","\t * @private","\t * @param {String} options Link-specific options as a data attribute string","\t * @returns {Object}","\t */","\tvar getDataOptions = function ( options ) {","\t\treturn !options || !(typeof JSON === 'object' && typeof JSON.parse === 'function') ? {} : JSON.parse( options );","\t};","","\t/**","\t * Update the URL","\t * @private","\t * @param {Element} anchor The element to scroll to","\t * @param {Boolean} url Whether or not to update the URL history","\t */","\tvar updateUrl = function ( anchor, url ) {","\t\tif ( history.pushState && (url || url === 'true') ) {","\t\t\thistory.pushState( null, null, [root.location.protocol, '//', root.location.host, root.location.pathname, root.location.search, anchor].join('') );","\t\t}","\t};","","\t/**","\t * Start/stop the scrolling animation","\t * @public","\t * @param {Element} toggle The element that toggled the scroll event","\t * @param {Element} anchor The element to scroll to","\t * @param {Object} options","\t */","\tsmoothScroll.animateScroll = function ( toggle, anchor, options ) {","","\t\t// Options and overrides","\t\tvar settings = extend( settings || defaults, options || {} );  // Merge user options with defaults","\t\tvar overrides = getDataOptions( toggle ? toggle.getAttribute('data-options') : null );","\t\tsettings = extend( settings, overrides );","\t\tanchor = '#' + escapeCharacters(anchor.substr(1)); // Escape special characters and leading numbers","","\t\t// Selectors and variables","\t\tvar anchorElem = anchor === '#' ? document.documentElement : document.querySelector(anchor);","\t\tvar startLocation = root.pageYOffset; // Current location on the page","\t\tif ( !fixedHeader ) { fixedHeader = document.querySelector('[data-scroll-header]'); }  // Get the fixed header if not already set","\t\tvar headerHeight = fixedHeader === null ? 0 : ( getHeight( fixedHeader ) + fixedHeader.offsetTop ); // Get the height of a fixed header if one exists","\t\tvar endLocation = getEndLocation( anchorElem, headerHeight, parseInt(settings.offset, 10) ); // Scroll to location","\t\tvar animationInterval; // interval timer","\t\tvar distance = endLocation - startLocation; // distance to travel","\t\tvar documentHeight = getDocumentHeight();","\t\tvar timeLapsed = 0;","\t\tvar percentage, position;","","\t\t// Update URL","\t\tupdateUrl(anchor, settings.updateURL);","","\t\t/**","\t\t * Stop the scroll animation when it reaches its target (or the bottom/top of page)","\t\t * @private","\t\t * @param {Number} position Current position on the page","\t\t * @param {Number} endLocation Scroll to location","\t\t * @param {Number} animationInterval How much to scroll on this loop","\t\t */","\t\tvar stopAnimateScroll = function (position, endLocation, animationInterval) {","\t\t\tvar currentLocation = root.pageYOffset;","\t\t\tif ( position == endLocation || currentLocation == endLocation || ( (root.innerHeight + currentLocation) >= documentHeight ) ) {","\t\t\t\tclearInterval(animationInterval);","\t\t\t\tanchorElem.focus();","\t\t\t\tsettings.callbackAfter( toggle, anchor ); // Run callbacks after animation complete","\t\t\t}","\t\t};","","\t\t/**","\t\t * Loop scrolling animation","\t\t * @private","\t\t */","\t\tvar loopAnimateScroll = function () {","\t\t\ttimeLapsed += 16;","\t\t\tpercentage = ( timeLapsed / parseInt(settings.speed, 10) );","\t\t\tpercentage = ( percentage > 1 ) ? 1 : percentage;","\t\t\tposition = startLocation + ( distance * easingPattern(settings.easing, percentage) );","\t\t\troot.scrollTo( 0, Math.floor(position) );","\t\t\tstopAnimateScroll(position, endLocation, animationInterval);","\t\t};","","\t\t/**","\t\t * Set interval timer","\t\t * @private","\t\t */","\t\tvar startAnimateScroll = function () {","\t\t\tsettings.callbackBefore( toggle, anchor ); // Run callbacks before animating scroll","\t\t\tanimationInterval = setInterval(loopAnimateScroll, 16);","\t\t};","","\t\t/**","\t\t * Reset position to fix weird iOS bug","\t\t * @link https://github.com/cferdinandi/smooth-scroll/issues/45","\t\t */","\t\tif ( root.pageYOffset === 0 ) {","\t\t\troot.scrollTo( 0, 0 );","\t\t}","","\t\t// Start scrolling animation","\t\tstartAnimateScroll();","","\t};","","\t/**","\t * If smooth scroll element clicked, animate scroll","\t * @private","\t */","\tvar eventHandler = function (event) {","\t\tvar toggle = getClosest(event.target, '[data-scroll]');","\t\tif ( toggle && toggle.tagName.toLowerCase() === 'a' ) {","\t\t\tevent.preventDefault(); // Prevent default click event","\t\t\tsmoothScroll.animateScroll( toggle, toggle.hash, settings); // Animate scroll","\t\t}","\t};","","\t/**","\t * On window scroll and resize, only run events at a rate of 15fps for better performance","\t * @private","\t * @param  {Function} eventTimeout Timeout function","\t * @param  {Object} settings","\t */","\tvar eventThrottler = function (event) {","\t\tif ( !eventTimeout ) {","\t\t\teventTimeout = setTimeout(function() {","\t\t\t\teventTimeout = null; // Reset timeout","\t\t\t\theaderHeight = fixedHeader === null ? 0 : ( getHeight( fixedHeader ) + fixedHeader.offsetTop ); // Get the height of a fixed header if one exists","\t\t\t}, 66);","\t\t}","\t};","","\t/**","\t * Destroy the current initialization.","\t * @public","\t */","\tsmoothScroll.destroy = function () {","","\t\t// If plugin isn't already initialized, stop","\t\tif ( !settings ) return;","","\t\t// Remove event listeners","\t\tdocument.removeEventListener( 'click', eventHandler, false );","\t\troot.removeEventListener( 'resize', eventThrottler, false );","","\t\t// Reset varaibles","\t\tsettings = null;","\t\teventTimeout = null;","\t\tfixedHeader = null;","\t};","","\t/**","\t * Initialize Smooth Scroll","\t * @public","\t * @param {Object} options User settings","\t */","\tsmoothScroll.init = function ( options ) {","","\t\t// feature test","\t\tif ( !supports ) return;","","\t\t// Destroy any existing initializations","\t\tsmoothScroll.destroy();","","\t\t// Selectors and variables","\t\tsettings = extend( defaults, options || {} ); // Merge user options with defaults","\t\tfixedHeader = document.querySelector('[data-scroll-header]'); // Get the fixed header","","\t\t// When a toggle is clicked, run the click handler","\t\tdocument.addEventListener('click', eventHandler, false );","\t\tif ( fixedHeader ) { root.addEventListener( 'resize', eventThrottler, false ); }","","\t};","","","\t//","\t// Public APIs","\t//","","\treturn smoothScroll;","","});"],"id":1}]]},"ace":{"folds":[],"scrolltop":6822,"scrollleft":0,"selection":{"start":{"row":428,"column":3},"end":{"row":428,"column":3},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":122,"state":"doc-start","mode":"ace/mode/javascript"}},"timestamp":1468330794800,"hash":"cc2b5be5bcb850fea62473159737680af4e05b86"}